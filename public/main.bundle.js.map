{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/account-approve/account-approve.component.html","./src/app/account-approve/account-approve.component.scss","./src/app/account-approve/account-approve.component.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/data.service.ts","./src/app/email-confirmation/email-confirmation.component.html","./src/app/email-confirmation/email-confirmation.component.scss","./src/app/email-confirmation/email-confirmation.component.ts","./src/app/helpers/authguard.ts","./src/app/helpers/jwt.interceptor.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/navbar/navbar.component.css","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/register/register.component.css","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/upload/upload.component.css","./src/app/upload/upload.component.html","./src/app/upload/upload.component.ts","./src/app/view-uploads/view-uploads.component.css","./src/app/view-uploads/view-uploads.component.html","./src/app/view-uploads/view-uploads.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div *ngIf=\\\"isModalShown\\\" [config]=\\\"{ show: true }\\\" (onHidden)=\\\"onHidden()\\\" mdbModal #myModal=\\\"mdb-modal\\\" class=\\\"modal fade\\\"\\n      tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n      <div class=\\\"modal-dialog modal-lg\\\">\\n        <div class=\\\"modal-content\\\">\\n          <div class=\\\"modal-body\\\">\\n            <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"hideModal()\\\">\\n              <span aria-hidden=\\\"true\\\">×</span>\\n            </button>\\n            <img *ngIf=\\\"imageToShow\\\" [src]=\\\"imageToShow\\\" alt=\\\"Place image title\\\" class=\\\"img-fluid\\\">\\n            <ng-template #noImageFound>\\n              <p>no image peeps</p>\\n            </ng-template>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-8\\\">\\n      <table class=\\\"table table-striped\\\">\\n        <thead>\\n          <tr>\\n            <th>Name</th>\\n            <th>card</th>\\n            <th>sno</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody >\\n          <tr *ngFor=\\\"let account of accounts\\\">\\n            <td>{{account.name}}</td>\\n            <td>{{account.sno}}</td>\\n            <td>{{account.card}}</td>\\n            <td>\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary waves-light\\\" (click)=\\\"showModal(account.idFileName)\\\" mdbRippleRadius>View ID</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success waves-light\\\" (click)=\\\"approveAccount(account.sno,account._id)\\\" mdbRippleRadius>Approve</button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account-approve/account-approve.component.html\n// module id = ./src/app/account-approve/account-approve.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/account-approve/account-approve.component.scss\n// module id = ./src/app/account-approve/account-approve.component.scss\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { NgModule } from '@angular/core';\nimport { ModalDirective } from 'angular-bootstrap-md';\n\n\n// --------------------------------------- END OF CONTENT CLASS ----------------------------------//\n\ninterface Xdata {\n  status?: Number;\n  data?: any;\n}\n\n@Component({\n  selector: 'app-account-approve',\n  templateUrl: './account-approve.component.html',\n  styleUrls: ['./account-approve.component.scss']\n})\n\nexport class AccountApproveComponent implements OnInit {\n  accounts: any;\n  imageToShow: any;\n  isImageLoading: any;\n\n  constructor(private dataService: DataService) {\n    this.dataService.getPendingAccounts().subscribe(api_data => {\n      const d: Xdata = api_data;\n      this.accounts = d.data.profile;\n    });\n  }\n\n  // -----------------------\n\n  @ViewChild('myModal') public autoShownModal: ModalDirective;\n  public isModalShown = false;\n\n  public showModal(filename): void {\n    this.isModalShown = true;\n    var path = this.getImageUrl(filename);\n    this.getImageFromService(path);\n  }\n\n  public hideModal(): void {\n    this.autoShownModal.hide();\n  }\n\n  public onHidden(): void {\n    this.isModalShown = false;\n  }\n\n  createImageFromBlob(image: Blob) {\n    let reader = new FileReader();\n    reader.addEventListener('load', () => {\n        this.imageToShow = reader.result;\n    }, false);\n\n    if (image) {\n        reader.readAsDataURL(image);\n    }\n}\ngetImageFromService(url: string) {\n    this.isImageLoading = true;\n    this.dataService.getImage(url).subscribe(data => {\n        this.createImageFromBlob(data);\n        this.isImageLoading = false;\n\n    }, error => {\n        this.isImageLoading = false;\n        // console.log(error);\n    });\n}\n  getImageUrl(name: any) {\n    return '/api/user/id?fn=' + name;\n  }\n\n  approveAccount(sno: string, id: string) {\n    this.dataService.approve(sno, id).subscribe(data => {\n      console.log(data);\n    });\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/account-approve/account-approve.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n   // constructor\n    constructor() {}\n    ngOnInit() {}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { FileUploadModule } from 'ng2-file-upload/ng2-file-upload';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { routing } from './app.routing';\nimport { AppComponent } from './app.component';\nimport { DataService } from './data.service';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { UploadComponent } from './upload/upload.component';\nimport { directive } from '@angular/core/src/render3/instructions';\nimport { ViewUploadsComponent } from './view-uploads/view-uploads.component';\nimport { JwtInterceptor } from './helpers/jwt.interceptor';\nimport { AuthGuard } from './helpers/authguard';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { AccountApproveComponent} from './account-approve/account-approve.component';\nimport { EmailConfirmationComponent } from './email-confirmation/email-confirmation.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    UploadComponent,\n    ViewUploadsComponent,\n    NavbarComponent,\n    AccountApproveComponent,\n    EmailConfirmationComponent\n  ],\n  imports: [\n    MDBBootstrapModule.forRoot(),\n    BrowserModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    FileUploadModule\n  ],\n  providers: [\n    DataService,\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor,\n      multi: true\n    }\n  ],\n  schemas: [ NO_ERRORS_SCHEMA ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UploadComponent } from './upload/upload.component';\r\nimport { ViewUploadsComponent} from './view-uploads/view-uploads.component';\r\nimport { AccountApproveComponent } from './account-approve/account-approve.component';\r\nimport { EmailConfirmationComponent} from './email-confirmation/email-confirmation.component';\r\n\r\nimport { AuthGuard } from './helpers/authguard';\r\nconst appRoutes: Routes = [\r\n    {path: 'user/confirmation/:id/:token', component: EmailConfirmationComponent},\r\n    { path: 'register', component: RegisterComponent },\r\n    { path: 'approve', component: AccountApproveComponent },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'upload', component: UploadComponent},\r\n    { path: 'view', component: ViewUploadsComponent, canActivate: [AuthGuard]},\r\n    // otherwise redirect to home\r\n    { path: '**', redirectTo: 'view' }\r\n];\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routing.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions} from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\nimport {User} from './models/user.model';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class DataService {\n  prefix: String = '.';\n  result: any;\n\n  constructor(private http: HttpClient) { }\n  approve(sno, id) {\n    return this.http.post(this.prefix + '/api/user/approve', {'sno': sno, 'id': id});\n  }\n  create(user) {\n    return this.http.post( this.prefix + '/api/user/register', user);\n  }\n  login(cred: any) {\n    return this.http.post(this.prefix + '/api/user/login', cred);\n  }\n\n  getSubjects() {\n    return this.http.get('./api/util/subjects');\n  }\n\n  getUploads() {\n    return this.http.get(this.prefix + '/api/upload');\n  }\n\n  getPendingAccounts() {\n    return this.http.get('./api/user/pending');\n  }\n\n  getImage(imageUrl: string) {\n    return this.http.get(imageUrl, { responseType: 'blob' });\n}\ngetConfirmation(id: string, token: string) {\n  return this.http.post(this.prefix + '/api/user/confirmation', {'id': id, 'token': token});\n}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data.service.ts","module.exports = \"<p>\\n  Verifying your account information.. You will be redirected on success\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/email-confirmation/email-confirmation.component.html\n// module id = ./src/app/email-confirmation/email-confirmation.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/email-confirmation/email-confirmation.component.scss\n// module id = ./src/app/email-confirmation/email-confirmation.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Router } from '@angular/router/';\n\n@Component({\n  selector: 'app-email-confirmation',\n  templateUrl: './email-confirmation.component.html',\n  styleUrls: ['./email-confirmation.component.scss']\n})\n\nexport class EmailConfirmationComponent implements OnInit {\n  private id: string;\n  private token: string;\n  constructor(private dataService: DataService, private route: ActivatedRoute, private router: Router) {\n  }\n\n\n\n  ngOnInit() {\n    this.route.paramMap.subscribe(params => {\n      this.id = params.get('id');\n      this.token = params.get('token');\n    });\n    if (this.id && this.token) {\n      this.dataService.getConfirmation(this.id, this.token).subscribe(data => {\n        const d: any = data;\n        if (d.status === 200) {\n          this.router.navigate(['login', { landStatus: 'ACCOUNT_ACTIVATED' }]);\n        }\n      });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/email-confirmation/email-confirmation.component.ts","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        if (localStorage.getItem('currentUser')) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], {queryParams: {landStatus: 'session_expired'}});\r\n        return false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/helpers/authguard.ts","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (currentUser && currentUser.token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `${currentUser.token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/helpers/jwt.interceptor.ts","module.exports = \".container-fluid{\\r\\n  background: #00F260;  /* fallback for old browsers */  /* Chrome 10-25, Safari 5.1-6 */\\r\\n    background: -webkit-gradient(linear, left top, right top, from(#0575E6), to(#00F260));\\r\\n    background: linear-gradient(to right, #0575E6, #00F260); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\r\\n    \\r\\n\\r\\n    /*background-image: url('../../../../images/bg.png');\\r\\n    background-repeat: repeat;*/\\r\\n}\\r\\n@media (min-width: 768px) {\\r\\n    .card{\\r\\n        max-width: 380px;\\r\\n    }\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid h-100\\\">\\n  <div class=\\\"row flex-nowrap h-100 justify-content-md-center align-items-center\\\">\\n    <div class=\\\"card col-12 col-md-4 z-depth-4\\\">\\n      <p class=\\\"h4 text-center mb-4 mt-4\\\">Sign in</p>\\n      <div *ngIf=\\\"alert!=''\\\" class=\\\"alert text-center mb-3\\\" [class]=\\\"alertClass\\\">\\n          {{alert}}\\n      </div>\\n      <form (ngSubmit)=\\\"login()\\\" class=\\\"pl-2 pr-2\\\">\\n        <div class=\\\"md-form\\\">\\n\\n          <i class=\\\"fa fa-user prefix\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"fun\\\" class=\\\"form-control\\\" name=\\\"un\\\" [(ngModel)]=\\\"cred.un\\\" required #sname=\\\"ngModel\\\" required mdbActive>\\n          <label for=\\\"fun\\\">Registration No </label>\\n          <div *ngIf=\\\"false\\\" class=\\\"help-block\\\">Username is required</div>\\n\\n        </div>\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-key prefix\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"fpw\\\" class=\\\"form-control\\\" name=\\\"pw\\\" [(ngModel)]=\\\"cred.pw\\\" required #pw=\\\"ngModel\\\" required mdbActive>\\n          <label for=\\\"fpw\\\">Password</label>\\n          <div *ngIf=\\\"false\\\" class=\\\"help-block\\\">Username is required</div>\\n        </div>\\n        <div class=\\\"md-form\\\">\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary waves-light btn-block\\\" mdbRippleRadius>Log in</button>\\n        </div>\\n      </form>\\n      <div class=\\\"text-center\\\">New to file-share?\\n        <a href=\\\"\\\" [routerLink]=\\\"['/register']\\\">register</a>.</div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { RouterLink, Router, ActivatedRoute } from '@angular/router';\n\ninterface Xdata {\n  status?: Number;\n  message?: string;\n  data?: any;\n}\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\nalert = '';\nalertClass = 'alert-danger';\n  constructor(private dataService: DataService, private router: Router, private aRoute: ActivatedRoute) {\n    if (localStorage.getItem('currentUser')) {\n      this.router.navigate(['view']);\n    }\n    this.alert = '';\n    aRoute.queryParams.subscribe(params => {\n      if (params['landStatus'] == 'session_expired') {\n        this.alertClass = 'alert-danger';\n        this.alert = 'Your session has expired. Please log in to continue';\n      } else if (params['landStatus'] === 'ACCOUNT_ACTIVATED') {\n        this.alertClass = 'alert-success';\n        this.alert = 'Your account is activated. Please log in to continue';\n      }\n    });\n  }\n  cred: any = {};\n\n  ngOnInit() {\n  }\n\n  login() {\n    this.alert = '';\n    this.dataService.login(this.cred)\n        .subscribe(\n            api_data => {\n              const data: Xdata = api_data;\n              if (data.status === 200) {\n                localStorage.setItem('currentUser', JSON.stringify(data.data));\n              this.router.navigate(['view']);\n              } else {\n                if (data.message === 'USER_NOT_ACTIVE' ) {\n                  this.alertClass = 'alert-danger';\n                  this.alert = 'Your account is not active. Please check your mail for confirmation email';\n                } else {\n                  this.alertClass = 'alert-danger';\n                  this.alert = data.message;\n                }\n              }\n            },\n            error => {\n                console.log(error);\n            });\n  }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \".nav-custom{\\r\\n    background-color: aquamarine !important;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.css\n// module id = ./src/app/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!--<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Version 1.0</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNavAltMarkup\\\" aria-controls=\\\"navbarNavAltMarkup\\\"\\n    aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNavAltMarkup\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home\\n          <span class=\\\"sr-only\\\">(current)</span>\\n        </a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/register\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\"routerLink=\\\"/upload\\\">Uplaod</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <span class=\\\"pr-2\\\">{{profile.profile.name}}</span>\\n  <button class=\\\"nav-item\\\" type=\\\"button\\\" class=\\\"btn btn-primary my-2\\\" (click)=\\\"logout()\\\">Log out</button>\\n</nav>\\n-->\\n<!--Navbar-->\\n<mdb-navbar SideClass=\\\"navbar navbar-expand-lg teal darken-4\\\">\\n           \\n  <!-- Navbar brand -->\\n  <logo><a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a></logo>\\n\\n  <!-- Collapsible content -->\\n  <links>\\n\\n      <!-- Links -->\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n          <li class=\\\"nav-item active white-text\\\">\\n              <a class=\\\"nav-link waves-light \\\" mdbRippleRadius routerLink=\\\"/view\\\">Home<span class=\\\"sr-only\\\">(current)</span></a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link waves-light white-text\\\" mdbRippleRadius routerLink=\\\"/upload\\\">Upload</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link waves-light white-text\\\" mdbRippleRadius routerLink=\\\"/approve\\\">Approve</a>\\n        </li>\\n      </ul>\\n      <span class=\\\"navbar-text white-text\\\">{{profile.profile.name}}</span>\\n  <button class=\\\"btn btn-outline-success btn-sm my-0 waves-light\\\" type=\\\"button\\\" (click)=\\\"logout()\\\">Log out</button>\\n      <!-- Links -->\\n  </links>\\n  <!-- Collapsible content -->\\n  \\n</mdb-navbar>\\n<!--/.Navbar-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/navbar/navbar.component.html\n// module id = ./src/app/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  profile: any;\n  constructor(private router: Router) {\n    this.profile = JSON.parse( localStorage.getItem('currentUser'));\n    console.log(this.profile);\n  }\n\n  ngOnInit() {\n  }\n\n\n  logout() {\n    localStorage.removeItem('currentUser');\n    this.router.navigate(['login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/navbar/navbar.component.ts","module.exports = \".container-fluid{\\r\\n    background: #67B26F;  /* fallback for old browsers */  /* Chrome 10-25, Safari 5.1-6 */\\r\\n    background: -webkit-gradient(linear, left top, right top, from(#4ca2cd), to(#67B26F));\\r\\n    background: linear-gradient(to right, #4ca2cd, #67B26F); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\\r\\n}\\r\\n\\r\\n.circle-icon {\\r\\n    background: #ffc0c0;\\r\\n    padding:30px;\\r\\n    border-radius: 50%;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = ./src/app/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container-fluid h-100 pl-5 pr-5\\\">\\n  <div class=\\\"row flex-nowrap h-100 justify-content-md-center align-items-center\\\">\\n    <div id=\\\"info\\\" class=\\\"card col-12 col-md-3\\\" *ngIf=\\\"visibleTab==1\\\">\\n      <h3 class=\\\"h3-responsive pt-3 text-center\\\">Create Account</h3>\\n      <form (ngSubmit)=\\\"register()\\\" class=\\\"pl-3 pr-3\\\">\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-user prefix\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"fname\\\" class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"model.name\\\" required #name=\\\"ngModel\\\" mdbActive>\\n          <label for=\\\"fname\\\">Name</label>\\n        </div>\\n        <span *ngIf=\\\"false\\\" style=\\\"display:block\\\" class=\\\"help-block\\\">Username is required</span>\\n\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-tag prefix\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"fcard\\\" class=\\\"form-control\\\" name=\\\"card\\\" [(ngModel)]=\\\"model.card\\\" required mdbActive>\\n          <label for=\\\"fcard\\\">Card</label>\\n        </div>\\n\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-hashtag prefix\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"fsno\\\" class=\\\"form-control\\\" name=\\\"sno\\\" [(ngModel)]=\\\"model.sno\\\" required mdbActive>\\n          <label for=\\\"fsno\\\">Registration No</label>\\n        </div>\\n\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-phone prefix\\\"></i>\\n          <input type=\\\"text\\\" id=\\\"ftelno\\\" class=\\\"form-control\\\" name=\\\"tpno\\\" [(ngModel)]=\\\"model.tpno\\\" required mdbActive>\\n          <label for=\\\"femail\\\">Telephone No</label>\\n        </div>\\n\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-paper-plane prefix\\\"></i>\\n          <input type=\\\"email\\\" id=\\\"femail\\\" class=\\\"form-control\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" required mdbActive>\\n          <label for=\\\"femail\\\">Email</label>\\n        </div>\\n\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"fpwrd\\\" class=\\\"form-control\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" required mdbActive>\\n          <label for=\\\"fpwrd\\\">Password</label>\\n        </div>\\n\\n        <div class=\\\"md-form\\\">\\n          <i class=\\\"fa fa-lock prefix\\\"></i>\\n          <input type=\\\"password\\\" id=\\\"fre-pwrd\\\" class=\\\"form-control\\\" name=\\\"confirm_password\\\" required mdbActive>\\n          <label for=\\\"fre-pwrd\\\">Confirm Password</label>\\n        </div>\\n\\n\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary waves-light btn-block\\\" mdbRippleRadius>Sign Up</button>\\n        <div class=\\\"text-center pt-2 pb-2\\\">Already have an account?\\n          <a [routerLink]=\\\"['/login']\\\">Login here</a>.\\n        </div>\\n      </form>\\n    </div>\\n\\n    <div id=\\\"file\\\" class=\\\"card col-12 col-md-3\\\" *ngIf=\\\"visibleTab==2\\\">\\n        <h3 class=\\\"h3-responsive pt-3 text-center\\\">Upload a photo of your University Identity Card</h3>\\n      <input type=\\\"file\\\" class=\\\"mt-4\\\" name=\\\"photo\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n      <!-- button to trigger the file upload when submitted -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-success btn-s mt-4\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n          <i class=\\\"fa fa-circle-o-notch fa-spin\\\" *ngIf=\\\"uploading==true\\\"></i>Upload\\n      </button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-outline-info waves-effect mt-2 mb-4\\\" (click)=\\\"visibleTab=1\\\">\\n          Back to Details\\n        </button>\\n    </div>\\n    <div id=\\\"successMsg\\\" class=\\\"card col-12 col-md-3\\\" *ngIf=\\\"visibleTab==200\\\">\\n      <h5 class=\\\"h3-responsive pt-3 text-center green-text\\\">You details have been successfully Recorded</h5>\\n    <p>Please check your email for confirmation link and use it to activate your account. \\n      <br/>click the button below to go to login page</p>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success waves-effect mt-2 mb-4\\\" routerLink=\\\"/login\\\">\\n       Login\\n      </button>\\n  </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport {  FileUploader, ParsedResponseHeaders, FileItem } from 'ng2-file-upload';\nimport { Router } from '@angular/router';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  model: any = {};\n  visibleTab: Number = 1;\n  private uploading = false;\n  constructor(private dataService: DataService, private router: Router) { }\n\n  public uploader: FileUploader = new FileUploader({\n    url: './api/user/register', itemAlias: 'identityCard',\n    parametersBeforeFiles: true\n  });\n  ngOnInit() {\n    this.uploader.onAfterAddingFile = (file) => {\n      file.withCredentials = false;\n    };\n    // overide the onCompleteItem property of the uploader so we are\n    // able to deal with the server response.\n    this.uploader.onProgressItem = (item: FileItem, progress: any) => {\n      this.uploading = true;\n    };\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n      this.uploading = false;\n      let data = JSON.parse(response);\n         if ( data.status == 200 && data.message == 'SUCCESS') {\n           this.visibleTab = 200;\n         }\n     };\n     this.uploader.onBuildItemForm = (item, form) => {\n       form.append('name', this.model.name);\n       form.append('card', this.model.card);\n       form.append('sno', this.model.sno);\n       form.append('tpno', this.model.tpno);\n       form.append('email', this.model.email);\n       form.append('password', this.model.password);\n      };\n  }\n  register() {\n    console.log(this.model);\n    /*this.dataService.create(this.model)\n        .subscribe(\n            data => {\n                // set success message and pass true paramater to persist the message after redirecting to the login page\n              console.log('Registration successful');\n              this.router.navigate(['login']);\n            },\n            error => {\n                console.log(error);\n            });*/\n  this.visibleTab = 2;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/upload/upload.component.css\n// module id = ./src/app/upload/upload.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"title\\\">Title</span>\\n        </div>\\n        <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.title\\\" name=\\\"title\\\" placeholder=\\\"Title\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"title\\\">Desciption</span>\\n        </div>\\n        <textarea class=\\\"form-control\\\" id=\\\"desc\\\" [(ngModel)]=\\\"model.desc\\\" name=\\\"desc\\\" placeholder=\\\"Description\\\"></textarea>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"input-group\\\">\\n        <div class=\\\"input-group-prepend\\\">\\n          <span class=\\\"input-group-text\\\" id=\\\"title\\\">Course</span>\\n        </div>\\n        <select class=\\\"form-control\\\" id=\\\"course\\\" [(ngModel)]=\\\"model.course\\\" name=\\\"course\\\">\\n          <optgroup *ngFor=\\\"let subject of subjects\\\" label=\\\"{{subject._id}}\\\">\\n          <option *ngFor=\\\"let course of subject.courses\\\" [ngValue]=\\\"course.id\\\">{{course.code}} {{course.name}}</option>\\n          </optgroup>\\n        </select>\\n        \\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link active\\\" id=\\\"file-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#file\\\" role=\\\"tab\\\" aria-controls=\\\"File\\\" aria-selected=\\\"true\\\">File</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" id=\\\"video-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#video\\\" role=\\\"tab\\\" aria-controls=\\\"video\\\" aria-selected=\\\"false\\\">Video</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n              <a class=\\\"nav-link\\\" id=\\\"text-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#text\\\" role=\\\"tab\\\" aria-controls=\\\"text\\\" aria-selected=\\\"false\\\">Text</a>\\n            </li>\\n          </ul>\\n          <div class=\\\"tab-content\\\" id=\\\"myTabContent\\\">\\n            <div class=\\\"tab-pane fade show active\\\" id=\\\"file\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"file-tab\\\">\\n              <div class=\\\"col-md-12\\\">\\n                  <!-- File input for the file-upload plugin, with special ng2-file-upload directive called ng2FileSelect-->\\n                  <input type=\\\"file\\\" name=\\\"photo\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\n                  <!-- button to trigger the file upload when submitted -->\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                    Upload\\n                  </button>\\n               </div>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"video\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"video-tab\\\">\\n              <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                  <span class=\\\"input-group-text\\\" id=\\\"title\\\">link</span>\\n                </div>\\n                <input id=\\\"title\\\" type=\\\"text\\\" class=\\\"form-control\\\" #link name=\\\"link\\\" placeholder=\\\"link\\\">\\n              </div>\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\">Upload</button>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"text\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"text-tab\\\">\\n              <textarea class=\\\"form-control\\\" id=\\\"uText\\\" style=\\\"min-height:15em\\\" placeholder=\\\"Enter plain Text\\\"></textarea>\\n              <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"uploader.uploadAll()\\\">Upload</button>\\n            </div>\\n           \\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/upload/upload.component.html\n// module id = ./src/app/upload/upload.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport {  FileUploader } from 'ng2-file-upload';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\n\nconst URL = './api/upload';\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.component.html',\n  styleUrls: ['./upload.component.css']\n})\nexport class UploadComponent implements OnInit {\nsubjects: any = {};\n  model: any = {};\n  constructor(private router: Router, private dataService: DataService) {\n    this.dataService.getSubjects().subscribe(data => {this.subjects = data; console.log(this.subjects); });\n  }\n    // declare a property called fileuploader and assign it to an instance of a new fileUploader.\n    // pass in the Url to be uploaded to, and pass the itemAlais, which would be the name of the //file input when sending the post request.\n    private currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    public uploader: FileUploader = new FileUploader({\n      url: URL, itemAlias: 'file',\n      headers: [{name: 'Authorization', value: `${this.currentUser.token}`}],\n      parametersBeforeFiles: true,\n    });\n\n    ngOnInit() {\n    // override the onAfterAddingfile property of the uploader so it doesn't authenticate with //credentials.\n    this.uploader.onAfterAddingFile = (file) => { file.withCredentials = false;\n    };\n    // overide the onCompleteItem property of the uploader so we are\n    // able to deal with the server response.\n    this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n         console.log('ImageUpload:uploaded:'  + status);\n     };\n     this.uploader.onBuildItemForm = (item, form) => {\n       form.append('title', this.model.title);\n       form.append('desc', this.model.desc);\n       form.append('course', this.model.course);\n       form.append('type', 'file');\n    };\n }\n register() {\n     this.router.navigate(['register']);\n }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/upload/upload.component.ts","module.exports = \".back{\\r\\n    background-image: url('bg.56d58312fdb2501f5a0a.png');\\r\\n    background-repeat: repeat;\\r\\n    }\\r\\n    .card-subtitle{\\r\\n        font-size: 0.9em !important;\\r\\n    }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-uploads/view-uploads.component.css\n// module id = ./src/app/view-uploads/view-uploads.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container-fluid h-100 pt-3 back\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n\\n    </div>\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card mb-3\\\" *ngFor=\\\"let file of files\\\">\\n          <div class=\\\"card-header deep-orange lighten-1 white-text\\\">\\n              Featured\\n          </div>      \\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"h-100 clearfix float-left pr-2\\\">\\n            <span class=\\\"fa fa-file-pdf-o fa-2x\\\"></span>\\n          </div>\\n          <h4 class=\\\"card-title\\\">{{file.title}}</h4>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{file.course.subject}} > {{file.course.code}} : {{file.course.name}}</h6>\\n          <p class=\\\"card-text\\\">\\n            {{file.desc}}\\n          </p>\\n          <button type=\\\"button\\\" class=\\\"btn btn-elegant waves-light btn-sm float-right\\\" (click)=\\\"download(file.content)\\\">\\n            <i class=\\\"fa fa-download mr-1\\\"></i>download</button>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col\\\"></div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/view-uploads/view-uploads.component.html\n// module id = ./src/app/view-uploads/view-uploads.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { RouterLink } from '@angular/router';\n\ninterface Xdata {\n  status?: Number;\n  data?: any;\n}\n\n@Component({\n  selector: 'app-view-uploads',\n  templateUrl: './view-uploads.component.html',\n  styleUrls: ['./view-uploads.component.css']\n})\n\nexport class ViewUploadsComponent implements OnInit {\n  files: any;\n  constructor(private dataService: DataService) {\n    this.dataService.getUploads().subscribe(api_data => {\n      const data: Xdata = api_data;\n      if (!(data.status === 500)) {\n        this.files = data.data;\n      } else {\n        alert(data.status);\n      }\n\n     });\n  }\n  download(content: any) {\n      let link = document.createElement('a');\n      link.href = './api/file/' + content.fileId;\n      link.download = content.fileName;\n      link.click();\n  }\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/view-uploads/view-uploads.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}